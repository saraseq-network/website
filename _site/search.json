[
  {
    "objectID": "outreach/news/2025-09-20-network-seminar.html",
    "href": "outreach/news/2025-09-20-network-seminar.html",
    "title": "SNA_Learn: Networks in Animal Health",
    "section": "",
    "text": "Animal movement connects premises (farms, markets, dealers, raisers, slaughter plants). These connections form contact networks that shape pathogen spread, traceability and targeting of interventions (e.g., targeted surveillance, biosecurity implementation and control measures). In this course, we’ll use R to:\n\nBuild and visualize networks of animal movements.\nVisualize networks and annotate nodes by type (state, breed, sex, etc).\nCompute core metrics (in/out-degree, strength, betweenness, components).\n“Slice” networks over time to see how structure changes.\n\n\nCore idea: Each shipment is typically a directed edge from origin → destination, with weight = number of animals moved (or shipments). Node attributes capture premises type (e.g., Dairy, Dealer, Market) and region (i.e., state, zip code). Edge attributes could be animal details (e.g., breeds, age, sex moved).\n\n\n\nTo start, let’s import a typical hypothetical dataset of cattle movements in the US and have a look at the variables.\n\nlibrary(tidyverse)\n\nmovements &lt;- readr::read_csv(\"data/SampleDataset_3m.csv\", show_col_types = FALSE)\n\nglimpse(movements)\n\n\n\n\n\n\n\n\n\nVariable\nDescription\nExample\n\n\n\n\ndate\nDate of shipment (YYYY-MM-DD)\n2025-03-15\n\n\norigin_id\nUnique code for the origin premises\nP01\n\n\norigin_type\nType of origin premises (e.g., Dairy, Dealer, Market)\nDairy\n\n\ndestination_id\nUnique code for the destination premises\nP10\n\n\ndestination_type\nType of destination premises\nFeedlot\n\n\nhead\nNumber of animals moved in this shipment\n25\n\n\ncategory\nAge/production stage of animals (Calf, Feeder, Adult)\nCalf\n\n\nsex\nSex of animals (M, F, Mixed)\nM\n\n\nbreed\nBreed category (Holstein, Angus, etc.)\nHolstein\n\n\npurpose\nReason for movement (Sale, Raising, Finishing, Slaughter)\nRaising\n\n\n\n\n\n\nNodes are the entities in our network. In this case, each unique premises (farm, dealer, market, etc.), but it could also be a region. We can list all the unique origins and destinations to define the set of nodes.\n\n# Build node list from both origins and destinations\nlength(unique(c(movements$origin_name, movements$destination_name))) # how many unique premises?\n\n# if we are interested, we can also add the farm type and state as attributes.\nnodes &lt;- movements %&gt;%\n  select(origin_name, origin_type, origin_state,\n         destination_name, destination_type, destination_state) %&gt;%\n  pivot_longer(\n    everything(),\n    names_to = c(\"role\", \".value\"),\n    names_pattern = \"(origin|destination)_(.*)\") %&gt;%\n  transmute(prem_id = name, type, state) %&gt;%\n  distinct()\n\n# Now quick summaries:\nnodes %&gt;% count(type, sort = TRUE)\nnodes %&gt;% count(state, sort = TRUE)\n\nnodes %&gt;% \n  count(state, type) %&gt;%\n  ggplot(aes(x = reorder(state, n), y = n, fill = type)) +\n  geom_col() +\n  coord_flip() +\n  labs(\n    title = \"Premises by State and Type\",\n    x = \"State\",\n    y = \"Number of Premises\",\n    fill = \"Type\") +\n  scale_y_continuous(breaks = 0:10) +  # &lt;- only integer ticks\n  theme_classic()\n\n\n\n\n\n\n\nCheck-in questions:\n\n\n\n\nHow many different premises could you identify?\nIs there a better represented state?\nWhat types of premises did you find?\n\n\n\n\n\n\nIn this step, we collapse the raw movement records into what we call an edgelist.\n\nEach row represents a directed connection from an origin premises to a destination premises. Along with the connection itself, we summarize two key attributes: shipments = the total number of movements between that pair of premises; animals = the total number of head(s) moved across all those shipments\n\nThis edgelist is the backbone of the network: it defines the edges (links) between premises and stores attributes that can later be used to weight connections later on (e.g., thicker arrows for more shipments moved, larger nodes for more animals moved).\n\nedges &lt;- movements %&gt;%\n  group_by(origin_name, destination_name) %&gt;%\n  summarise(\n    shipments = n(),\n    animals   = sum(head),\n    .groups   = \"drop\"\n  )\n\nhead(edges)\n\n\n\n\nSeems like we have all set. What now? The igraph R package makes our life simple.\n\nIgraph is a library and R package for network analysis, providing a pain-free implementation of graph algorithms and fast handling of large graphs that have millions of nodes and edges. By using this package, we create a special object of class “IGRAPH”.\n\nFor example:\n\nlibrary(igraph)\ng &lt;- graph_from_edgelist(\n  matrix(c(\"A\",\"B\",\"B\",\"C\",\"C\",\"A\"), ncol=2, byrow=TRUE),\n  directed = TRUE) \ng\n\nIGRAPH 0c649a8 DN-- 3 3 -- \n+ attr: name (v/c)\n+ edges from 0c649a8 (vertex names):\n[1] A-&gt;B B-&gt;C C-&gt;A\n\nclass(g)\n\n[1] \"igraph\"\n\nis.simple(g)\n\n[1] TRUE\n\n# Let's visualize the network!\nplot(g)\n\n\n\n\n\n\n\n# How many nodes/vertices does it have?\nV(g)\n\n+ 3/3 vertices, named, from 0c649a8:\n[1] A B C\n\n# How many edges?\nE(g)\n\n+ 3/3 edges from 0c649a8 (vertex names):\n[1] A-&gt;B B-&gt;C C-&gt;A\n\n\n\nIgraph assumes, by default, that our network is directed. If we want to explicitly set it as undirected:\n\ng_undirected &lt;- graph_from_edgelist(\n  matrix(c(\"A\",\"B\",\"B\",\"C\",\"C\",\"A\"), ncol=2, byrow=TRUE),\n  directed = FALSE) \nplot(g_undirected)\n\n\n\n\n\n\n\n\n\n\n\n\nlibrary(igraph)\ng &lt;- graph_from_data_frame(\n  d = edges, \n  vertices = nodes,   # your node list with attributes\n  directed = TRUE)\n\nplot(g,\n  layout = layout_with_fr(g),\n  vertex.size = 8,\n  vertex.label = NA,\n  edge.arrow.size = 0.3,\n  edge.color = \"grey40\")\n\n\n\n\n\n\n\n\n\n\n\n\nNow that we’ve visualized our animal movement network, the next step is to quantify its structure with a five simple statistics:\n\n\nTotal number of nodes (premises) and edges (movements) in the network.\n\nHow many premises and movements do we observe?\n\n\n# How many nodes/vertices does it have?\nV(g)\nvcount(g) \n\n# How many edges?\nE(g)\necount(g)    \n\n\n\n\nProportion of actual edges to the maximum possible edges.\n\nHow “connected” is our system compared to a fully connected network?\n\n\nedge_density(g, loops = FALSE)\n\n\n\n\nThe number of subgroups of nodes where everyone is connected directly or indirectly.\n\nAre there isolated clusters of premises not linked to the rest?\n\n\ncomponents(g, mode = \"weak\")$no  # number of weakly connected components\ncomponents(g, mode = \"strong\")$no  # number of strongly connected components\n\n\n\n\n\n\n\nCheck-in question:\n\n\n\n\nWhy is the number of weakly connected components different than the strongly connected components?\n\n\n\nCode\nplot(g,\n  layout = layout_with_fr(g),\n  vertex.size = 8,\n  vertex.label = NA,\n  vertex.color = components(g, mode = \"strong\")$membership,  # each component gets its own color\n  edge.arrow.size = 0.3,\n  edge.color = \"grey40\"\n)\n\n\n\n\n\n\n\nDiameter is the single longest shortest path between any two nodes (i.e., informs about the extent of a possible disease outbreak), while the Average Path Length is the mean of all shortest paths (i.e., informs the mean distance an outbreak would reach).\n\nOn average, how many steps separate one premises from another? What about the maximum distance?\n\n\nmean_distance(g, directed = FALSE)\ndiameter(g, directed = FALSE)\n\n\n\n\nProbability that two connected nodes’ neighbors are also connected. I will be zero if there are no triangles, or 1 if all neighbors of nodes connect to each other.\n\nDo we see “triangles” (tight local clusters) in our network?\n\n\ntransitivity(g, type = \"global\")\n\n\n\n\n\n\nWe can also calculate measures that capture some more general notion of ‘importance’ of a node - typically referred to as node/vertex centrality measures. Some of them include degree (in-degree, out-degree or total degree), weighted degree or strength (in-strength, out-strength or total strength), closeness and betweenness centrality.\n\n\nWhat is the degree in this network, as represented in the graph?\n\n\n\n\n\n\n\n\n\n    River Beef Ranch       Pioneer Dealer        County Market \n                   8                   23                   25 \n     Prairie Feedlot      Blue Beef Ranch         North Dealer \n                  17                    8                   26 \n           Oak Dairy         Metro Market         Mesa Feedlot \n                   8                   24                   19 \n     Vista Slaughter         South Dealer  Sunrise Calf Raiser \n                  14                   25                   15 \n      Central Market          Green Dairy    Harvest Slaughter \n                  26                    8                   14 \n       Valley Raiser Hillside Calf Raiser           Lake Dairy \n                  17                   17                    9 \n         Maple Dairy     Cedar Beef Ranch \n                   9                    8 \n\n\n\n\nInstead of simply counting the number of edges (degree), we can account for the magnitude of movements by summing up the edge weights:\n\n# Total animals moved (in + out)\nV(g)$strength_animals_total &lt;- strength(g, mode = \"all\", weights = E(g)$animals)\n\n# Total shipments moved (in + out)\nE(g)$weight &lt;- E(g)$shipments\n\nOnce we defined our weights, we can visualize it!\n\n# Plot scaled by total animals moved\nplot(g,\n  layout = layout_with_fr(g),\n  vertex.size = scales::rescale(V(g)$strength_animals_total, to = c(2,30)),\n  vertex.label = NA,\n  edge.width  = scales::rescale(E(g)$weight, to = c(0.01, 4)),\n  edge.arrow.size = 0.3,\n  edge.color = \"grey40\",\n  main = \"Node size scaled by total animals moved (imports + exports)\")\n\n\n\n\n\n\n\n\nIt already tells us way more information about the role of premises in the network, right? It might be helpful to distinguish different node types by color (what type of premises have more connections?):\n\n# Define your palette\npal &lt;- c(Dairy = \"skyblue2\",\n    CalfRaiser = \"seagreen\",\n    Dealer     = \"purple3\",\n    Market     = \"yellow\",\n    Feedlot    = \"saddlebrown\",\n    Slaughter  = \"tomato3\",\n    Beef       = \"orange\")\n\n# Assign colors\ntypes &lt;- as.character(V(g)$type)\ncols  &lt;- pal[types]\nV(g)$color &lt;- cols\n\nset.seed(42)\n{\n  plot(g,\n    layout = layout_with_fr(g),\n    vertex.size  = scales::rescale(V(g)$strength_animals_total, to = c(4,35)),\n    vertex.color = V(g)$color,\n    vertex.label = NA,\n    edge.width   = scales::rescale(E(g)$weight, to = c(0.01, 4)),\n    edge.arrow.size = 0.2,\n    edge.color  = \"grey40\",\n    main = \"Node color defines premise type\"\n  )\n  legend(\"topright\",\n         legend = intersect(names(pal), unique(as.character(V(g)$type))),\n         col    = pal[intersect(names(pal), unique(as.character(V(g)$type)))],\n         pch = 19, bty = \"n\", cex = 0.9, title = \"Premises type\")\n}\n\n\n\n\n\n\n\n\n\n\n\n\n# Total animals moved (in + out)\nV(g)$strength_animals_in &lt;- strength(g, mode = \"in\", weights = E(g)$animals)\nV(g)$strength_animals_out &lt;- strength(g, mode = \"out\", weights = E(g)$animals)\n  \nin_out_plot &lt;- par(mfrow = c(1,2), mar = c(1,1,1,2)) # frame side by side plots\n\n  plot(g,\n    layout = layout_with_fr(g),\n    vertex.size  = scales::rescale(V(g)$strength_animals_in, to = c(4,35)),\n    vertex.color = V(g)$color,\n    vertex.label = NA,\n    edge.width   = scales::rescale(E(g)$weight, to = c(0.01, 4)),\n    edge.arrow.size = 0.2,\n    edge.color  = \"grey40\",\n    main = \"Node size based on In-degree\")\n  legend(\"topright\",\n         legend = intersect(names(pal), unique(as.character(V(g)$type))),\n         col    = pal[intersect(names(pal), unique(as.character(V(g)$type)))],\n         pch = 19, bty = \"n\", cex = 0.9, title = \"Premises type\")\n\n  plot(g,\n    layout = layout_with_fr(g),\n    vertex.size  = scales::rescale(V(g)$strength_animals_out, to = c(4,35)),\n    vertex.color = V(g)$color,\n    vertex.label = NA,\n    edge.width   = scales::rescale(E(g)$weight, to = c(0.01, 4)),\n    edge.arrow.size = 0.2,\n    edge.color  = \"grey40\",\n    main = \"Node size based on Out-degree\")\n  legend(\"topright\",\n         legend = intersect(names(pal), unique(as.character(V(g)$type))),\n         col    = pal[intersect(names(pal), unique(as.character(V(g)$type)))],\n         pch = 19, bty = \"n\", cex = 0.9, title = \"Premises type\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCheck-in questions:\n\n\n\n\nLooking at the 2 networks, who are the biggest receivers (highest in-degree nodes) simultaneously the major senders (out-degree nodes) of animals?\n\n\nCode\n   # check the top in- and out-degree nodes\n  V(g)$name[order(V(g)$strength_animals_in,  decreasing = TRUE)[1:3]]\n  V(g)$name[order(V(g)$strength_animals_out,  decreasing = TRUE)[1:3]]\n\n\nIf they are not the same, what could this mean for disease transmission?\n\n\n\n\n\n\n\nCloseness centrality is the inverse of the sum of all the distances between node i and all the other nodes in the network.\n\n\n\n\n\nNodes are more prominent to the extend they are close to all other nodes in the network (most often ignoring direction of links for animal networks);\n\n*What does that mean practically?* Premises with high closeness centrality could spread disease quickly across the system, even if they don’t handle the largest number of animals. Think of these nodes as shortcuts in the network - surveillance at these nodes might help us detect diseases earlier, since they are more central in terms of reach.\n\n\n# Compute closeness (ignore direction; unweighted)\nV(g)$closeness &lt;- closeness(g, mode = \"all\", weights = NA, normalized = TRUE)\n\n# Simple plot: size by closeness, color by type\nplot(g,\n  layout       = layout_with_fr(g),\n  vertex.size  = scales::rescale(V(g)$closeness, to = c(6, 34)),\n  vertex.color = V(g)$color,\n  vertex.label = NA,\n  edge.width   = scales::rescale(E(g)$weight %||% 1, to = c(0.2, 4)),\n  edge.arrow.size = 0.20,\n  edge.color   = \"grey65\",\n  main         = \"Closeness centrality (undirected)\")\n\nlegend(\"topright\", legend = names(pal), col = pal, pch = 19, bty = \"n\", cex = 0.8)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCheck-in questions:\n\n\n\n\nWho are the highest closeness centrality nodes?\n\n\n\nCode\n# top 3 nodes tip\nV(g)$name[order(V(g)$closeness, decreasing = TRUE)[1:3]]\n\n\n\n\n\n\n\nBetweenness centrality, as the name indicates, measures the extent to which a node lies on paths between other nodes.\n\n\n\n\n\nNodes have high betweeness if they are in a position to observe or control the “flow of information” in the network.\n\n*What does that mean practically?* Premises with high betweenness centrality act like bridges or brokers. They don’t necessarily move the most animals, but they sit on the shortest paths between other premises, meaning they can control or facilitate the flow of animals (and pathogens) between otherwise weakly connected parts of the system. Targeting high-betweenness nodes (e.g., through biosecurity campaigns or movement restrictions) can interrupt transmission routes more effectively than focusing on large volume sites.\n\n\n# Compute betweenness (often undirected for animal networks)\nV(g)$betweenness &lt;- betweenness(g, directed = FALSE, weights = NA, normalized = TRUE)\n\n# Visualize\nplot(g,\n  layout       = layout_with_fr(g),\n  vertex.size  = scales::rescale(V(g)$betweenness, to = c(6, 34)),\n  vertex.color = V(g)$color,\n  vertex.label = NA,\n  edge.width   = scales::rescale(E(g)$weight %||% 1, to = c(0.2, 4)),\n  edge.arrow.size = 0.20,\n  edge.color   = \"grey65\",\n  main         = \"Betweenness centrality (undirected)\")\n\nlegend(\"topright\", legend = names(pal), col = pal, pch = 19, bty = \"n\", cex = 0.8)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCheck-in questions:\n\n\n\n\nWho are the highest betweenness centrality nodes?\n\n\n\nCode\n# top 3 nodes\nV(g)$name[order(V(g)$betweenness, decreasing = TRUE)[1:3]]"
  },
  {
    "objectID": "outreach/news/2025-09-20-network-seminar.html#introduction-and-example-network",
    "href": "outreach/news/2025-09-20-network-seminar.html#introduction-and-example-network",
    "title": "SNA_Learn: Networks in Animal Health",
    "section": "",
    "text": "Animal movement connects premises (farms, markets, dealers, raisers, slaughter plants). These connections form contact networks that shape pathogen spread, traceability and targeting of interventions (e.g., targeted surveillance, biosecurity implementation and control measures). In this course, we’ll use R to:\n\nBuild and visualize networks of animal movements.\nVisualize networks and annotate nodes by type (state, breed, sex, etc).\nCompute core metrics (in/out-degree, strength, betweenness, components).\n“Slice” networks over time to see how structure changes.\n\n\nCore idea: Each shipment is typically a directed edge from origin → destination, with weight = number of animals moved (or shipments). Node attributes capture premises type (e.g., Dairy, Dealer, Market) and region (i.e., state, zip code). Edge attributes could be animal details (e.g., breeds, age, sex moved).\n\n\n\nTo start, let’s import a typical hypothetical dataset of cattle movements in the US and have a look at the variables.\n\nlibrary(tidyverse)\n\nmovements &lt;- readr::read_csv(\"data/SampleDataset_3m.csv\", show_col_types = FALSE)\n\nglimpse(movements)\n\n\n\n\n\n\n\n\n\nVariable\nDescription\nExample\n\n\n\n\ndate\nDate of shipment (YYYY-MM-DD)\n2025-03-15\n\n\norigin_id\nUnique code for the origin premises\nP01\n\n\norigin_type\nType of origin premises (e.g., Dairy, Dealer, Market)\nDairy\n\n\ndestination_id\nUnique code for the destination premises\nP10\n\n\ndestination_type\nType of destination premises\nFeedlot\n\n\nhead\nNumber of animals moved in this shipment\n25\n\n\ncategory\nAge/production stage of animals (Calf, Feeder, Adult)\nCalf\n\n\nsex\nSex of animals (M, F, Mixed)\nM\n\n\nbreed\nBreed category (Holstein, Angus, etc.)\nHolstein\n\n\npurpose\nReason for movement (Sale, Raising, Finishing, Slaughter)\nRaising\n\n\n\n\n\n\nNodes are the entities in our network. In this case, each unique premises (farm, dealer, market, etc.), but it could also be a region. We can list all the unique origins and destinations to define the set of nodes.\n\n# Build node list from both origins and destinations\nlength(unique(c(movements$origin_name, movements$destination_name))) # how many unique premises?\n\n# if we are interested, we can also add the farm type and state as attributes.\nnodes &lt;- movements %&gt;%\n  select(origin_name, origin_type, origin_state,\n         destination_name, destination_type, destination_state) %&gt;%\n  pivot_longer(\n    everything(),\n    names_to = c(\"role\", \".value\"),\n    names_pattern = \"(origin|destination)_(.*)\") %&gt;%\n  transmute(prem_id = name, type, state) %&gt;%\n  distinct()\n\n# Now quick summaries:\nnodes %&gt;% count(type, sort = TRUE)\nnodes %&gt;% count(state, sort = TRUE)\n\nnodes %&gt;% \n  count(state, type) %&gt;%\n  ggplot(aes(x = reorder(state, n), y = n, fill = type)) +\n  geom_col() +\n  coord_flip() +\n  labs(\n    title = \"Premises by State and Type\",\n    x = \"State\",\n    y = \"Number of Premises\",\n    fill = \"Type\") +\n  scale_y_continuous(breaks = 0:10) +  # &lt;- only integer ticks\n  theme_classic()\n\n\n\n\n\n\n\nCheck-in questions:\n\n\n\n\nHow many different premises could you identify?\nIs there a better represented state?\nWhat types of premises did you find?\n\n\n\n\n\n\nIn this step, we collapse the raw movement records into what we call an edgelist.\n\nEach row represents a directed connection from an origin premises to a destination premises. Along with the connection itself, we summarize two key attributes: shipments = the total number of movements between that pair of premises; animals = the total number of head(s) moved across all those shipments\n\nThis edgelist is the backbone of the network: it defines the edges (links) between premises and stores attributes that can later be used to weight connections later on (e.g., thicker arrows for more shipments moved, larger nodes for more animals moved).\n\nedges &lt;- movements %&gt;%\n  group_by(origin_name, destination_name) %&gt;%\n  summarise(\n    shipments = n(),\n    animals   = sum(head),\n    .groups   = \"drop\"\n  )\n\nhead(edges)\n\n\n\n\nSeems like we have all set. What now? The igraph R package makes our life simple.\n\nIgraph is a library and R package for network analysis, providing a pain-free implementation of graph algorithms and fast handling of large graphs that have millions of nodes and edges. By using this package, we create a special object of class “IGRAPH”.\n\nFor example:\n\nlibrary(igraph)\ng &lt;- graph_from_edgelist(\n  matrix(c(\"A\",\"B\",\"B\",\"C\",\"C\",\"A\"), ncol=2, byrow=TRUE),\n  directed = TRUE) \ng\n\nIGRAPH 0c649a8 DN-- 3 3 -- \n+ attr: name (v/c)\n+ edges from 0c649a8 (vertex names):\n[1] A-&gt;B B-&gt;C C-&gt;A\n\nclass(g)\n\n[1] \"igraph\"\n\nis.simple(g)\n\n[1] TRUE\n\n# Let's visualize the network!\nplot(g)\n\n\n\n\n\n\n\n# How many nodes/vertices does it have?\nV(g)\n\n+ 3/3 vertices, named, from 0c649a8:\n[1] A B C\n\n# How many edges?\nE(g)\n\n+ 3/3 edges from 0c649a8 (vertex names):\n[1] A-&gt;B B-&gt;C C-&gt;A\n\n\n\nIgraph assumes, by default, that our network is directed. If we want to explicitly set it as undirected:\n\ng_undirected &lt;- graph_from_edgelist(\n  matrix(c(\"A\",\"B\",\"B\",\"C\",\"C\",\"A\"), ncol=2, byrow=TRUE),\n  directed = FALSE) \nplot(g_undirected)\n\n\n\n\n\n\n\n\n\n\n\n\nlibrary(igraph)\ng &lt;- graph_from_data_frame(\n  d = edges, \n  vertices = nodes,   # your node list with attributes\n  directed = TRUE)\n\nplot(g,\n  layout = layout_with_fr(g),\n  vertex.size = 8,\n  vertex.label = NA,\n  edge.arrow.size = 0.3,\n  edge.color = \"grey40\")\n\n\n\n\n\n\n\n\n\n\n\n\nNow that we’ve visualized our animal movement network, the next step is to quantify its structure with a five simple statistics:\n\n\nTotal number of nodes (premises) and edges (movements) in the network.\n\nHow many premises and movements do we observe?\n\n\n# How many nodes/vertices does it have?\nV(g)\nvcount(g) \n\n# How many edges?\nE(g)\necount(g)    \n\n\n\n\nProportion of actual edges to the maximum possible edges.\n\nHow “connected” is our system compared to a fully connected network?\n\n\nedge_density(g, loops = FALSE)\n\n\n\n\nThe number of subgroups of nodes where everyone is connected directly or indirectly.\n\nAre there isolated clusters of premises not linked to the rest?\n\n\ncomponents(g, mode = \"weak\")$no  # number of weakly connected components\ncomponents(g, mode = \"strong\")$no  # number of strongly connected components\n\n\n\n\n\n\n\nCheck-in question:\n\n\n\n\nWhy is the number of weakly connected components different than the strongly connected components?\n\n\n\nCode\nplot(g,\n  layout = layout_with_fr(g),\n  vertex.size = 8,\n  vertex.label = NA,\n  vertex.color = components(g, mode = \"strong\")$membership,  # each component gets its own color\n  edge.arrow.size = 0.3,\n  edge.color = \"grey40\"\n)\n\n\n\n\n\n\n\nDiameter is the single longest shortest path between any two nodes (i.e., informs about the extent of a possible disease outbreak), while the Average Path Length is the mean of all shortest paths (i.e., informs the mean distance an outbreak would reach).\n\nOn average, how many steps separate one premises from another? What about the maximum distance?\n\n\nmean_distance(g, directed = FALSE)\ndiameter(g, directed = FALSE)\n\n\n\n\nProbability that two connected nodes’ neighbors are also connected. I will be zero if there are no triangles, or 1 if all neighbors of nodes connect to each other.\n\nDo we see “triangles” (tight local clusters) in our network?\n\n\ntransitivity(g, type = \"global\")\n\n\n\n\n\n\nWe can also calculate measures that capture some more general notion of ‘importance’ of a node - typically referred to as node/vertex centrality measures. Some of them include degree (in-degree, out-degree or total degree), weighted degree or strength (in-strength, out-strength or total strength), closeness and betweenness centrality.\n\n\nWhat is the degree in this network, as represented in the graph?\n\n\n\n\n\n\n\n\n\n    River Beef Ranch       Pioneer Dealer        County Market \n                   8                   23                   25 \n     Prairie Feedlot      Blue Beef Ranch         North Dealer \n                  17                    8                   26 \n           Oak Dairy         Metro Market         Mesa Feedlot \n                   8                   24                   19 \n     Vista Slaughter         South Dealer  Sunrise Calf Raiser \n                  14                   25                   15 \n      Central Market          Green Dairy    Harvest Slaughter \n                  26                    8                   14 \n       Valley Raiser Hillside Calf Raiser           Lake Dairy \n                  17                   17                    9 \n         Maple Dairy     Cedar Beef Ranch \n                   9                    8 \n\n\n\n\nInstead of simply counting the number of edges (degree), we can account for the magnitude of movements by summing up the edge weights:\n\n# Total animals moved (in + out)\nV(g)$strength_animals_total &lt;- strength(g, mode = \"all\", weights = E(g)$animals)\n\n# Total shipments moved (in + out)\nE(g)$weight &lt;- E(g)$shipments\n\nOnce we defined our weights, we can visualize it!\n\n# Plot scaled by total animals moved\nplot(g,\n  layout = layout_with_fr(g),\n  vertex.size = scales::rescale(V(g)$strength_animals_total, to = c(2,30)),\n  vertex.label = NA,\n  edge.width  = scales::rescale(E(g)$weight, to = c(0.01, 4)),\n  edge.arrow.size = 0.3,\n  edge.color = \"grey40\",\n  main = \"Node size scaled by total animals moved (imports + exports)\")\n\n\n\n\n\n\n\n\nIt already tells us way more information about the role of premises in the network, right? It might be helpful to distinguish different node types by color (what type of premises have more connections?):\n\n# Define your palette\npal &lt;- c(Dairy = \"skyblue2\",\n    CalfRaiser = \"seagreen\",\n    Dealer     = \"purple3\",\n    Market     = \"yellow\",\n    Feedlot    = \"saddlebrown\",\n    Slaughter  = \"tomato3\",\n    Beef       = \"orange\")\n\n# Assign colors\ntypes &lt;- as.character(V(g)$type)\ncols  &lt;- pal[types]\nV(g)$color &lt;- cols\n\nset.seed(42)\n{\n  plot(g,\n    layout = layout_with_fr(g),\n    vertex.size  = scales::rescale(V(g)$strength_animals_total, to = c(4,35)),\n    vertex.color = V(g)$color,\n    vertex.label = NA,\n    edge.width   = scales::rescale(E(g)$weight, to = c(0.01, 4)),\n    edge.arrow.size = 0.2,\n    edge.color  = \"grey40\",\n    main = \"Node color defines premise type\"\n  )\n  legend(\"topright\",\n         legend = intersect(names(pal), unique(as.character(V(g)$type))),\n         col    = pal[intersect(names(pal), unique(as.character(V(g)$type)))],\n         pch = 19, bty = \"n\", cex = 0.9, title = \"Premises type\")\n}\n\n\n\n\n\n\n\n\n\n\n\n\n# Total animals moved (in + out)\nV(g)$strength_animals_in &lt;- strength(g, mode = \"in\", weights = E(g)$animals)\nV(g)$strength_animals_out &lt;- strength(g, mode = \"out\", weights = E(g)$animals)\n  \nin_out_plot &lt;- par(mfrow = c(1,2), mar = c(1,1,1,2)) # frame side by side plots\n\n  plot(g,\n    layout = layout_with_fr(g),\n    vertex.size  = scales::rescale(V(g)$strength_animals_in, to = c(4,35)),\n    vertex.color = V(g)$color,\n    vertex.label = NA,\n    edge.width   = scales::rescale(E(g)$weight, to = c(0.01, 4)),\n    edge.arrow.size = 0.2,\n    edge.color  = \"grey40\",\n    main = \"Node size based on In-degree\")\n  legend(\"topright\",\n         legend = intersect(names(pal), unique(as.character(V(g)$type))),\n         col    = pal[intersect(names(pal), unique(as.character(V(g)$type)))],\n         pch = 19, bty = \"n\", cex = 0.9, title = \"Premises type\")\n\n  plot(g,\n    layout = layout_with_fr(g),\n    vertex.size  = scales::rescale(V(g)$strength_animals_out, to = c(4,35)),\n    vertex.color = V(g)$color,\n    vertex.label = NA,\n    edge.width   = scales::rescale(E(g)$weight, to = c(0.01, 4)),\n    edge.arrow.size = 0.2,\n    edge.color  = \"grey40\",\n    main = \"Node size based on Out-degree\")\n  legend(\"topright\",\n         legend = intersect(names(pal), unique(as.character(V(g)$type))),\n         col    = pal[intersect(names(pal), unique(as.character(V(g)$type)))],\n         pch = 19, bty = \"n\", cex = 0.9, title = \"Premises type\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCheck-in questions:\n\n\n\n\nLooking at the 2 networks, who are the biggest receivers (highest in-degree nodes) simultaneously the major senders (out-degree nodes) of animals?\n\n\nCode\n   # check the top in- and out-degree nodes\n  V(g)$name[order(V(g)$strength_animals_in,  decreasing = TRUE)[1:3]]\n  V(g)$name[order(V(g)$strength_animals_out,  decreasing = TRUE)[1:3]]\n\n\nIf they are not the same, what could this mean for disease transmission?\n\n\n\n\n\n\n\nCloseness centrality is the inverse of the sum of all the distances between node i and all the other nodes in the network.\n\n\n\n\n\nNodes are more prominent to the extend they are close to all other nodes in the network (most often ignoring direction of links for animal networks);\n\n*What does that mean practically?* Premises with high closeness centrality could spread disease quickly across the system, even if they don’t handle the largest number of animals. Think of these nodes as shortcuts in the network - surveillance at these nodes might help us detect diseases earlier, since they are more central in terms of reach.\n\n\n# Compute closeness (ignore direction; unweighted)\nV(g)$closeness &lt;- closeness(g, mode = \"all\", weights = NA, normalized = TRUE)\n\n# Simple plot: size by closeness, color by type\nplot(g,\n  layout       = layout_with_fr(g),\n  vertex.size  = scales::rescale(V(g)$closeness, to = c(6, 34)),\n  vertex.color = V(g)$color,\n  vertex.label = NA,\n  edge.width   = scales::rescale(E(g)$weight %||% 1, to = c(0.2, 4)),\n  edge.arrow.size = 0.20,\n  edge.color   = \"grey65\",\n  main         = \"Closeness centrality (undirected)\")\n\nlegend(\"topright\", legend = names(pal), col = pal, pch = 19, bty = \"n\", cex = 0.8)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCheck-in questions:\n\n\n\n\nWho are the highest closeness centrality nodes?\n\n\n\nCode\n# top 3 nodes tip\nV(g)$name[order(V(g)$closeness, decreasing = TRUE)[1:3]]\n\n\n\n\n\n\n\nBetweenness centrality, as the name indicates, measures the extent to which a node lies on paths between other nodes.\n\n\n\n\n\nNodes have high betweeness if they are in a position to observe or control the “flow of information” in the network.\n\n*What does that mean practically?* Premises with high betweenness centrality act like bridges or brokers. They don’t necessarily move the most animals, but they sit on the shortest paths between other premises, meaning they can control or facilitate the flow of animals (and pathogens) between otherwise weakly connected parts of the system. Targeting high-betweenness nodes (e.g., through biosecurity campaigns or movement restrictions) can interrupt transmission routes more effectively than focusing on large volume sites.\n\n\n# Compute betweenness (often undirected for animal networks)\nV(g)$betweenness &lt;- betweenness(g, directed = FALSE, weights = NA, normalized = TRUE)\n\n# Visualize\nplot(g,\n  layout       = layout_with_fr(g),\n  vertex.size  = scales::rescale(V(g)$betweenness, to = c(6, 34)),\n  vertex.color = V(g)$color,\n  vertex.label = NA,\n  edge.width   = scales::rescale(E(g)$weight %||% 1, to = c(0.2, 4)),\n  edge.arrow.size = 0.20,\n  edge.color   = \"grey65\",\n  main         = \"Betweenness centrality (undirected)\")\n\nlegend(\"topright\", legend = names(pal), col = pal, pch = 19, bty = \"n\", cex = 0.8)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCheck-in questions:\n\n\n\n\nWho are the highest betweenness centrality nodes?\n\n\n\nCode\n# top 3 nodes\nV(g)$name[order(V(g)$betweenness, decreasing = TRUE)[1:3]]"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About me",
    "section": "",
    "text": "I’m Sara — a veterinarian by training, an epidemiologist by passion, and an explorer at heart.\nBorn in Portugal but with a spirit that never settled, I’ve always been drawn to the connections between science, animals, and the world around us. What began as a love for veterinary medicine quickly grew into a broader goal: understanding how populations move, how diseases spread, and how everything connects in an increasingly globalized world.\nSince discovering epidemiology, I’ve been chasing questions that move populations — particularly animals but not only. In an era where disease travels faster than ever, population medicine and spatial epidemiology are not just fields of study; they are ongoing challenges across borders, species, and ecosystems.\nConnecting the dots — between species, spaces, and people — is at the core of what I do."
  },
  {
    "objectID": "about.html#quick-facts",
    "href": "about.html#quick-facts",
    "title": "About me",
    "section": "Quick Facts",
    "text": "Quick Facts\n\nPhD Candidate in Veterinary Epidemiology\nFocused on spatial epidemiology, movement networks, and disease transmission\nPassionate about science communication, travel, and global health"
  },
  {
    "objectID": "about.html#beyond-the-lab",
    "href": "about.html#beyond-the-lab",
    "title": "About me",
    "section": "Beyond the lab",
    "text": "Beyond the lab\nIf I’m not debugging a model, I’m probably behind a camera, petting a dog, hunting good coffee, or outside running/hiking. I love cities with ocean light and neighborhoods with great markets."
  },
  {
    "objectID": "about.html#curriculum-vitae",
    "href": "about.html#curriculum-vitae",
    "title": "About me",
    "section": "Curriculum Vitae",
    "text": "Curriculum Vitae"
  },
  {
    "objectID": "research.html",
    "href": "research.html",
    "title": "My Research",
    "section": "",
    "text": "One of the greatest things about my job is how international and interdisciplinary it can be. During my career journey, I was fortunate to work with amazing teams across the globe, and with different livestock production systems."
  },
  {
    "objectID": "research.html#calf-movement-networks-salmonella-dublin-us",
    "href": "research.html#calf-movement-networks-salmonella-dublin-us",
    "title": "My Research",
    "section": "Calf movement networks & Salmonella Dublin (US)",
    "text": "Calf movement networks & Salmonella Dublin (US)"
  },
  {
    "objectID": "research.html#vehicle-movement-networks-biosecurity-brazil",
    "href": "research.html#vehicle-movement-networks-biosecurity-brazil",
    "title": "My Research",
    "section": "Vehicle movement networks & biosecurity (Brazil)",
    "text": "Vehicle movement networks & biosecurity (Brazil)"
  },
  {
    "objectID": "research.html#livestock-markets-biosecurity-us",
    "href": "research.html#livestock-markets-biosecurity-us",
    "title": "My Research",
    "section": "Livestock markets & Biosecurity (US)",
    "text": "Livestock markets & Biosecurity (US)"
  },
  {
    "objectID": "research.html#livestock-traceability-icvi-exceptions-us",
    "href": "research.html#livestock-traceability-icvi-exceptions-us",
    "title": "My Research",
    "section": "Livestock Traceability & ICVI Exceptions (US)",
    "text": "Livestock Traceability & ICVI Exceptions (US)"
  },
  {
    "objectID": "research.html#risk-based-framework-for-live-bird-shops-india",
    "href": "research.html#risk-based-framework-for-live-bird-shops-india",
    "title": "My Research",
    "section": "Risk-based framework for Live Bird Shops (India)",
    "text": "Risk-based framework for Live Bird Shops (India)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sara C. Sequeira",
    "section": "",
    "text": "Back to top"
  },
  {
    "objectID": "outreach.html",
    "href": "outreach.html",
    "title": "Outreach",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nFoot-and-Mouth Disease: step-by-step modeling\n\n\n\nTeaching\n\n\n\nHands-on intro to simulation modelling in R: the FMD case study\n\n\n\nOct 22, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSNA_Learn: Networks in Animal Health\n\n\n\nTeaching\n\n\n\nHands-on intro to animal movement network analysis in R.\n\n\n\nSep 20, 2025\n\n\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "outreach/news/2025-10-22-modelingclub-fmd.html",
    "href": "outreach/news/2025-10-22-modelingclub-fmd.html",
    "title": "Foot-and-Mouth Disease: step-by-step modeling",
    "section": "",
    "text": "Foot-and-mouth disease (FMD) is a severe, fast-spreading viral disease that primarily affects cloven-hoofed animals, including cows, pigs, sheep, goats, and deer, leading to considerable economic losses worldwide. As such, defining targeted FMD surveillance and control strategies becomes essential to prevent … An affordable way to understand FMD spread and explore intervention alternatives is to use mathematical and simulation modelling.\n\nThis Quarto document is a hands-on, incremental build of an FMD model: from a minimal SIR to SEIR, then adding controls (culling, vaccination), stochasticity, and a simple multi-farm extension. Each section includes exercises and checklists you can run during the session.\n\n\n\n\nKeeling & Rohani. Modeling Infectious Diseases in Humans and Animals. Princeton University Press."
  },
  {
    "objectID": "outreach/news/2025-10-22-modelingclub-fmd.html#references-starter",
    "href": "outreach/news/2025-10-22-modelingclub-fmd.html#references-starter",
    "title": "Foot-and-Mouth Disease: step-by-step modeling",
    "section": "",
    "text": "Keeling & Rohani. Modeling Infectious Diseases in Humans and Animals. Princeton University Press.\nKeeling MJ. 2005. Models of foot-and-mouth disease. Proc R Soc B.\nHayama et al. 2013. Ring vaccination targeting. Prev Vet Med."
  },
  {
    "objectID": "outreach/news/2025-10-22-modelingclub-fmd.html#references",
    "href": "outreach/news/2025-10-22-modelingclub-fmd.html#references",
    "title": "Foot-and-Mouth Disease: step-by-step modeling",
    "section": "",
    "text": "Keeling & Rohani. Modeling Infectious Diseases in Humans and Animals. Princeton University Press."
  }
]